{
  "data_asset_type": "Dataset",
  "expectation_suite_name": "data_validation.demo",
  "expectations": [
    {
      "expectation_type": "expect_table_row_count_to_equal",
      "kwargs": {
        "value": 6841
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_table_columns_to_match_set",
      "kwargs": {
        "column_set": [
          "location",
          "target",
          "text_cleaned",
          "tweet_tokenized",
          "text_hashtags",
          "text_mentions",
          "text_urls",
          "keyword_cleaned"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "location",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "location",
        "mostly": 0.5
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "target"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "target",
        "type_": "int"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_distinct_values_to_be_in_set",
      "kwargs": {
        "column": "target",
        "value_set": [
          0,
          1
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "target",
        "max_value": 0.6,
        "min_value": 0.4
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "text_cleaned",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_unique",
      "kwargs": {
        "column": "text_cleaned"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "text_cleaned"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "tweet_tokenized",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_unique",
      "kwargs": {
        "column": "tweet_tokenized"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "text_hashtags",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "text_hashtags",
        "mostly": 0.1
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_match_regex",
      "kwargs": {
        "column": "text_hashtags",
        "regex": "\\['\\#(.*)'\\]"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "text_mentions",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "text_mentions",
        "mostly": 0.1
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_match_regex",
      "kwargs": {
        "column": "text_mentions",
        "regex": "\\['\\@(.*)'\\]"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "text_urls",
        "type_": "int"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "text_urls"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_distinct_values_to_be_in_set",
      "kwargs": {
        "column": "text_urls",
        "value_set": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "text_urls",
        "max_value": 1.5,
        "min_value": 0.4
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_of_type",
      "kwargs": {
        "column": "keyword_cleaned",
        "type_": "str"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "keyword_cleaned",
        "mostly": 0.5
      },
      "meta": {}
    }
  ],
  "meta": {
    "BasicSuiteBuilderProfiler": {
      "batch_kwargs": {
        "data_asset_name": "processed",
        "datasource": "processed_tweets",
        "path": "datasets/processed.csv"
      },
      "created_at": 1612480865.50867,
      "created_by": "BasicSuiteBuilderProfiler"
    },
    "citations": [
      {
        "batch_kwargs": {
          "data_asset_name": "processed",
          "datasource": "processed_tweets",
          "path": "datasets/processed.csv"
        },
        "batch_markers": {
          "ge_load_time": "20210204T232105.360336Z",
          "pandas_data_fingerprint": "0366af7f6937ada7489663b9f2ebe23b"
        },
        "batch_parameters": null,
        "citation_date": "20210204T232105.555211Z",
        "comment": "BasicSuiteBuilderProfiler added a citation based on the current batch."
      }
    ],
    "columns": {
      "keyword_cleaned": {
        "description": ""
      },
      "location": {
        "description": ""
      },
      "target": {
        "description": ""
      },
      "text_cleaned": {
        "description": ""
      },
      "text_hashtags": {
        "description": ""
      },
      "text_mentions": {
        "description": ""
      },
      "text_urls": {
        "description": ""
      },
      "tweet_tokenized": {
        "description": ""
      }
    },
    "great_expectations_version": "0.13.8",
    "notes": {
      "content": [
        "_To add additional notes, edit the <code>meta.notes.content</code> field in the appropriate Expectation json file._"
      ],
      "format": "markdown"
    }
  }
}